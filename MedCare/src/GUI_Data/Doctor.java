/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI_Data;
import javax.swing.JOptionPane;
import java.util.regex.Pattern;
import java.sql.*;
import JavaClasses.DBConnection;
import net.proteanit.sql.DbUtils;
/**
 *
 * @author GIGABYTE
 */
public class Doctor extends javax.swing.JFrame {
    
    Connection conn = null;
    Statement stmt = null;

    /**
     * Creates new form Doctor
     */
    public Doctor() {
        initComponents();
        setExtendedState(java.awt.Frame.MAXIMIZED_BOTH);
        conn = DBConnection.getconn();
        showTableData();
        
    }
    private void allClear()
    {
           txtDocID.setText("");
           txtDName.setText("");
           txtDPhone.setText("");
           txtDEmail.setText("");
           txtDAddress.setText("");
           txtDocID.requestFocus();
    }
    private void showTableData()
    {
        try
        {
                stmt = conn.createStatement();
                String sql = "SELECT * FROM Doctor";
                PreparedStatement pstmt = conn.prepareStatement(sql);
                ResultSet rs = pstmt.executeQuery();
                jDTable1.setModel(DbUtils.resultSetToTableModel(rs));
                
                
        }
        catch(Exception h)
        {
            JOptionPane.showMessageDialog(null, h.toString());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel2 = new javax.swing.JLabel();
        txtDName = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jDTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtDPhone = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtDEmail = new javax.swing.JTextField();
        radDMale = new javax.swing.JRadioButton();
        radDFemale = new javax.swing.JRadioButton();
        cboRela = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        cboWard = new javax.swing.JComboBox<>();
        dcDateOfRegister = new com.toedter.calendar.JDateChooser();
        cboSpecial = new javax.swing.JComboBox<>();
        btnDUpdate = new javax.swing.JButton();
        btnDSave = new javax.swing.JButton();
        txtDSearch = new javax.swing.JTextField();
        btnSearch = new javax.swing.JButton();
        btnDDelete = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtDAddress = new javax.swing.JTextArea();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        btnDBack = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        dcDOB = new com.toedter.calendar.JDateChooser();
        jLabel11 = new javax.swing.JLabel();
        txtDocID = new javax.swing.JTextField();
        btnDClear = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenuHome = new javax.swing.JMenu();
        jMenuPatient = new javax.swing.JMenu();
        jMenuDoctor = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(800, 800));
        setSize(new java.awt.Dimension(1280, 1024));

        jLabel2.setText("Name");

        jDTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jDTable1);

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(51, 51, 255));
        jLabel1.setText("Register Doctor");

        jLabel3.setText("Phone");

        jLabel4.setText("Address");

        jLabel5.setText("Email");

        buttonGroup1.add(radDMale);
        radDMale.setSelected(true);
        radDMale.setText("Male");

        buttonGroup1.add(radDFemale);
        radDFemale.setText("Female");

        cboRela.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Single", "Married", " " }));

        jLabel6.setText("Relationship");

        jLabel7.setText("Ward");

        cboWard.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "01", "02", "03", "04", "05", "06", "07", "08", "09", "10" }));

        cboSpecial.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Allergy and immunology", "Anesthesiology", "Dermatology", "Diagnostic radiology", "Emergency medicine", "Family medicine", "Internal medicine", "Medical genetics", "Neurology", "Nuclear medicine", "Obstetrics and gynecology", "Ophthalmology", "Pathology", "Pediatrics", "Physical medicine and rehabilitation", "Preventive medicine", "Psychiatry", "Radiation oncology", "Surgery", "Urology" }));

        btnDUpdate.setIcon(new javax.swing.ImageIcon("F:\\NIBM\\EAD\\EADCourseWork2_KUDSE20.1F014\\resources\\exchange.png")); // NOI18N
        btnDUpdate.setText("Update");
        btnDUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDUpdateActionPerformed(evt);
            }
        });

        btnDSave.setIcon(new javax.swing.ImageIcon("F:\\NIBM\\EAD\\EADCourseWork2_KUDSE20.1F014\\resources\\diskette.png")); // NOI18N
        btnDSave.setText("Save");
        btnDSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDSaveActionPerformed(evt);
            }
        });

        btnSearch.setIcon(new javax.swing.ImageIcon("F:\\NIBM\\EAD\\EADCourseWork2_KUDSE20.1F014\\resources\\magnifying-glass.png")); // NOI18N
        btnSearch.setText("Search");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        btnDDelete.setIcon(new javax.swing.ImageIcon("F:\\NIBM\\EAD\\EADCourseWork2_KUDSE20.1F014\\resources\\clear.png")); // NOI18N
        btnDDelete.setText("Delete");
        btnDDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDDeleteActionPerformed(evt);
            }
        });

        txtDAddress.setColumns(20);
        txtDAddress.setRows(5);
        jScrollPane2.setViewportView(txtDAddress);

        jLabel8.setText("Date of Register");

        jLabel9.setText("Specialization");

        btnDBack.setIcon(new javax.swing.ImageIcon("F:\\NIBM\\EAD\\EADCourseWork2_KUDSE20.1F014\\resources\\previous.png")); // NOI18N
        btnDBack.setText("Back");
        btnDBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDBackActionPerformed(evt);
            }
        });

        jLabel10.setText("Date of Birth");

        jLabel11.setText("Doctor ID");

        btnDClear.setIcon(new javax.swing.ImageIcon("F:\\NIBM\\EAD\\EADCourseWork2_KUDSE20.1F014\\resources\\clear.png")); // NOI18N
        btnDClear.setText("Clear");
        btnDClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDClearActionPerformed(evt);
            }
        });

        jLabel12.setForeground(new java.awt.Color(102, 102, 102));
        jLabel12.setText("Search by Doctor ID or Name");

        jMenuHome.setText("Home");
        jMenuHome.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenuHomeMouseClicked(evt);
            }
        });
        jMenuBar1.add(jMenuHome);

        jMenuPatient.setText("Patient");
        jMenuPatient.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenuPatientMouseClicked(evt);
            }
        });
        jMenuBar1.add(jMenuPatient);

        jMenuDoctor.setText("Doctor");
        jMenuBar1.add(jMenuDoctor);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(btnDClear)
                                .addComponent(btnDBack, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 6, Short.MAX_VALUE)
                                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(375, 375, 375)
                                .addComponent(jLabel12)
                                .addGap(18, 18, 18)
                                .addComponent(txtDSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnDDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(65, 65, 65)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(txtDName)
                                        .addComponent(txtDPhone)
                                        .addComponent(txtDEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(txtDocID, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 784, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(269, 269, 269))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(160, 160, 160)
                                .addComponent(radDMale)
                                .addGap(18, 18, 18)
                                .addComponent(radDFemale))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel9)
                                    .addComponent(jLabel10)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel6))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(49, 49, 49)
                                        .addComponent(btnDUpdate)
                                        .addGap(18, 18, 18)
                                        .addComponent(btnDSave, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(81, 81, 81)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(cboWard, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(cboRela, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(dcDOB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(cboSpecial, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(dcDateOfRegister, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnDBack))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnSearch)
                        .addComponent(txtDSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel12)
                        .addComponent(btnDDelete)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(txtDocID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtDName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtDPhone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtDEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addGap(25, 25, 25)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(radDMale)
                            .addComponent(radDFemale))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel7)
                                .addGap(41, 41, 41)
                                .addComponent(jLabel10)
                                .addGap(36, 36, 36)
                                .addComponent(jLabel8)
                                .addGap(33, 33, 33)
                                .addComponent(jLabel9))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(cboRela, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(cboWard, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(32, 32, 32)
                                .addComponent(dcDOB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30)
                                .addComponent(dcDateOfRegister, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30)
                                .addComponent(cboSpecial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(36, 36, 36)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnDUpdate)
                            .addComponent(btnDSave)
                            .addComponent(btnDClear))
                        .addGap(50, 50, 50))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1)
                        .addContainerGap())))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnDBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDBackActionPerformed
            int deleteDBackRes = JOptionPane.showConfirmDialog(this, "Are sure want to go back, data will be lost!", "Select Option",JOptionPane.YES_NO_OPTION);
        
            if(deleteDBackRes == JOptionPane.YES_OPTION)
            {
                this.setVisible(false);
                new Home().setVisible(true);
            }
            
    }//GEN-LAST:event_btnDBackActionPerformed

    private void btnDSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDSaveActionPerformed
        String dGender = null;
        String dRela = cboRela.getSelectedItem().toString();
        String ward = cboWard.getSelectedItem().toString();
        String DOB = dcDOB.getDateFormatString();
        String dateOfReg = dcDateOfRegister.getDateFormatString();
        String special = cboSpecial.getSelectedItem().toString();
        String dNum = txtDPhone.getText();
        
        
        
        if(radDMale.isSelected())
        {
            dGender = "Male";
        }
        else
        {
            dGender = "Female";
        }
        
        //validation
        if(txtDocID.getText().trim().isEmpty())
        {
            JOptionPane.showMessageDialog(null, "Please enter Doctor ID");
            txtDocID.requestFocus();
        }
        else if(txtDName.getText().trim().isEmpty())
        {
            JOptionPane.showMessageDialog(null, "Please enter Doctor Name");
            txtDName.requestFocus();
        }
        else if(txtDPhone.getText().trim().isEmpty())
        {
            JOptionPane.showMessageDialog(null, "Please enter Phone Number");
            txtDPhone.requestFocus();
        }
        else if(!Pattern.matches("^[0-9]+$", dNum))
        {
            JOptionPane.showMessageDialog(null, "Invalid Contact Number");
            txtDPhone.setText("");
            txtDPhone.requestFocus();
        }
        else
        {
            try
            {
                stmt = conn.createStatement();
                String sql = "INSERT INTO Doctor(DoctorID,Name,Phone,Email,Address,Gender,Relationship,Ward,DOB,DOR,Specialization)VALUES('"+txtDocID.getText()+"', '"+txtDName.getText()+"', '"+dNum+"', '"+txtDEmail.getText()+"', '"+txtDAddress.getText()+"', '"+dGender+"', '"+dRela+"', '"+ward+"', '"+DOB+"', '"+dateOfReg+"', '"+special+"')";
                stmt.executeUpdate(sql);
                JOptionPane.showMessageDialog(null, "Saved Successfully!");
                txtDocID.setText("");
                txtDName.setText("");
                txtDPhone.setText("");
                txtDEmail.setText("");
                txtDAddress.setText("");
                txtDocID.requestFocus();
                showTableData();
                
            }
            catch(Exception cc)
            {
                JOptionPane.showMessageDialog(null, cc.toString());
            }
        }
    }//GEN-LAST:event_btnDSaveActionPerformed

    private void btnDUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDUpdateActionPerformed
        String dGender = null;
        String dRela = cboRela.getSelectedItem().toString();
        String ward = cboWard.getSelectedItem().toString();
        String DOB = dcDOB.getDateFormatString();
        String dateOfReg = dcDateOfRegister.getDateFormatString();
        String special = cboSpecial.getSelectedItem().toString();
        String dNum = txtDPhone.getText();
        
        if(txtDocID.getText().trim().isEmpty())
        {
            JOptionPane.showMessageDialog(null, "Please enter Doctor ID to Update");
            txtDocID.requestFocus();
        }
        else
        {
            try
            {
                stmt = conn.createStatement();
                String sql = "UPDATE Doctor SET DoctorID = '"+txtDocID.getText()+"', Name = '"+txtDName.getText()+"',Phone = '"+dNum+"', Email = '"+txtDEmail.getText()+"', Address = '"+txtDAddress.getText()+"', Gender = '"+dGender+"', Relationship = '"+dRela+"', Ward = '"+ward+"', DOB = '"+DOB+"', DOR = '"+dateOfReg+"', Specialization = '"+special+"' WHERE DoctorID = '"+txtDocID.getText()+"' ";
                stmt.executeUpdate(sql);
                JOptionPane.showMessageDialog(null, "Updated Successfully");
                txtDocID.setText("");
                txtDName.setText("");
                txtDPhone.setText("");
                txtDEmail.setText("");
                txtDAddress.setText("");
                txtDocID.requestFocus();
                showTableData();
                
            }
            catch(Exception f)
            {
                JOptionPane.showMessageDialog(null, f.toString());
            }
        }
    }//GEN-LAST:event_btnDUpdateActionPerformed

    private void btnDClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDClearActionPerformed
        allClear();
    }//GEN-LAST:event_btnDClearActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        if(txtDSearch.getText().trim().isEmpty())
        {
            JOptionPane.showMessageDialog(null, "Please enter Doctor ID to search!");
            txtDSearch.requestFocus();
        }
        else
        {
            try
            {
                stmt = conn.createStatement();
                String sql = "SELECT * FROM Doctor WHERE DoctorID = '"+txtDSearch.getText()+"' OR Name = '"+txtDSearch.getText()+"'";
                PreparedStatement pstmt = conn.prepareStatement(sql);
                ResultSet rs = pstmt.executeQuery();
                jDTable1.setModel(DbUtils.resultSetToTableModel(rs));
                txtDSearch.setText("");
                
                

            }
            catch(Exception j)
            {
                JOptionPane.showMessageDialog(null, j.toString());
            }
        }
    }//GEN-LAST:event_btnSearchActionPerformed

    private void btnDDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDDeleteActionPerformed
        if(txtDSearch.getText().trim().isEmpty())
        {
            JOptionPane.showMessageDialog(null, "Please enter Doctor ID to Delete!");
            txtDSearch.requestFocus();
        }
        else
        {
            int deleteDRes = JOptionPane.showConfirmDialog(this, "Are sure want delete, data will be lost!", "Select Option",JOptionPane.YES_NO_OPTION);
            
            if(deleteDRes == JOptionPane.YES_OPTION)
            {
                try
            {
                stmt = conn.createStatement();
                String sql = "DELETE FROM Doctor WHERE DoctorID = '"+txtDSearch.getText()+"' ";
                stmt.executeUpdate(sql);
                JOptionPane.showMessageDialog(null, "Deleted Successfully");
                txtDSearch.setText("");
                txtDSearch.requestFocus();
                showTableData();
                
                
            }
            catch(Exception k)
            {
                JOptionPane.showMessageDialog(null, k.toString());
            }
            }
        
            
        }
    }//GEN-LAST:event_btnDDeleteActionPerformed

    private void jMenuHomeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuHomeMouseClicked
        
            int goBackDRes = JOptionPane.showConfirmDialog(this, "Are sure want to leave the page, data will be lost!", "Select Option",JOptionPane.YES_NO_OPTION);
            
            if(goBackDRes == JOptionPane.YES_OPTION)
            {
                this.setVisible(false);
                new Home().setVisible(true);
            }
                
    }//GEN-LAST:event_jMenuHomeMouseClicked

    private void jMenuPatientMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuPatientMouseClicked
            int goBackDRes = JOptionPane.showConfirmDialog(this, "Are sure want to leave the page, data will be lost!", "Select Option",JOptionPane.YES_NO_OPTION);
            
            if(goBackDRes == JOptionPane.YES_OPTION)
            {
                this.setVisible(false);
                new Patient().setVisible(true);
            }
    }//GEN-LAST:event_jMenuPatientMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Doctor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Doctor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Doctor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Doctor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Doctor().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDBack;
    private javax.swing.JButton btnDClear;
    private javax.swing.JButton btnDDelete;
    private javax.swing.JButton btnDSave;
    private javax.swing.JButton btnDUpdate;
    private javax.swing.JButton btnSearch;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox<String> cboRela;
    private javax.swing.JComboBox<String> cboSpecial;
    private javax.swing.JComboBox<String> cboWard;
    private com.toedter.calendar.JDateChooser dcDOB;
    private com.toedter.calendar.JDateChooser dcDateOfRegister;
    private javax.swing.JTable jDTable1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenu jMenuDoctor;
    private javax.swing.JMenu jMenuHome;
    private javax.swing.JMenu jMenuPatient;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JRadioButton radDFemale;
    private javax.swing.JRadioButton radDMale;
    private javax.swing.JTextArea txtDAddress;
    private javax.swing.JTextField txtDEmail;
    private javax.swing.JTextField txtDName;
    private javax.swing.JTextField txtDPhone;
    private javax.swing.JTextField txtDSearch;
    private javax.swing.JTextField txtDocID;
    // End of variables declaration//GEN-END:variables
}
